version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_network

  airflow:
    image: apache/airflow:2.7.2
    container_name: airflow
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'True'
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      AIRFLOW__CORE__DAGS_AUTO_IMPORT: 'True'  # Garante que DAGs sejam importados automaticamente
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./data_lake:/opt/airflow/data_lake
      - ./logs:/opt/airflow/logs
    depends_on:
      - postgres
    networks:
      - airflow_network
    ports:
      - "8080:8080"
    restart: unless-stopped  # Reinicia o container automaticamente se parar

volumes:
  postgres_data:

networks:
  airflow_network:
# No Airflow, o Webserver e o Scheduler rodam no mesmo container quando você usa o executor LocalExecutor, que é o caso aqui. ENtão não é necessario configurar o Webserver separadamente, ele está embutido no próprio serviço airflow.